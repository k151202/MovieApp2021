{"ast":null,"code":"var _jsxFileName = \"/Users/taehyungkim/Documents/Code/khanflix/src/Routes/Search/SearchContainer.js\";\nimport { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"\",\n      loading: false,\n      error: null\n    };\n\n    this.handleSubmit = () => {\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm(searchTerm);\n      }\n    };\n\n    this.searchByTerm = async () => {\n      const {\n        searchTerm\n      } = this.state;\n\n      try {\n        const movieResults = await moviesApi.search(searchTerm);\n        const tvResults = await tvApi.search(searchTerm);\n        console.log(movieResults, tvResults);\n        this.setState({\n          loading: true\n        });\n      } catch {\n        this.setState({\n          error: \"Can't find results!\"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(SearchPresenter, {\n      movieResults: movieResults,\n      tvResults: tvResults,\n      searchTerm: searchTerm,\n      loading: loading,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/taehyungkim/Documents/Code/khanflix/src/Routes/Search/SearchContainer.js"],"names":["moviesApi","tvApi","React","SearchPresenter","Component","state","movieResults","tvResults","searchTerm","loading","error","handleSubmit","searchByTerm","search","console","log","setState","render"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,KAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,cAAcD,KAAK,CAACE,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,OAAO,EAAE,KAJH;AAKNC,MAAAA,KAAK,EAAE;AALD,KADmC;;AAAA,SAS3CC,YAT2C,GAS5B,MAAM;AACnB,YAAM;AAAEH,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAIG,UAAU,KAAK,EAAnB,EAAuB;AACrB,aAAKI,YAAL,CAAkBJ,UAAlB;AACD;AACF,KAd0C;;AAAA,SAgB3CI,YAhB2C,GAgB5B,YAAY;AACzB,YAAM;AAAEJ,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAI;AACF,cAAMC,YAAY,GAAG,MAAMN,SAAS,CAACa,MAAV,CAAiBL,UAAjB,CAA3B;AACA,cAAMD,SAAS,GAAG,MAAMN,KAAK,CAACY,MAAN,CAAaL,UAAb,CAAxB;AAEAM,QAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ,EAA0BC,SAA1B;AACA,aAAKS,QAAL,CAAc;AACZP,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OARD,CAQE,MAAM;AACN,aAAKO,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAZD,SAYU;AACR,aAAKM,QAAL,CAAc;AACZP,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF,KAnC0C;AAAA;;AAqC3CQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,YAAF;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA,UAA3B;AAAuCC,MAAAA,OAAvC;AAAgDC,MAAAA;AAAhD,QAA0D,KAAKL,KAArE;AACA,wBACE,QAAC,eAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,KAAK,EAAEC;AALT;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAhD0C","sourcesContent":["import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = () => {\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const movieResults = await moviesApi.search(searchTerm);\n      const tvResults = await tvApi.search(searchTerm);\n\n      console.log(movieResults, tvResults);\n      this.setState({\n        loading: true,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results!\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}