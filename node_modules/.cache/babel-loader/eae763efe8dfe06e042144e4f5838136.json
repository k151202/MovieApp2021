{"ast":null,"code":"var _jsxFileName = \"/Users/taehyungkim/Documents/Code/khanflix/src/Routes/Search/SearchContainer.js\";\nimport { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"\",\n      loading: false,\n      error: null\n    };\n\n    this.updateTerm = event => {\n      const {\n        target: {\n          value\n        }\n      } = event;\n      this.setState({\n        searchTerm: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm(searchTerm);\n      }\n    };\n\n    this.searchByTerm = async () => {\n      const {\n        searchTerm\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        throw Error();\n        const {\n          data: {\n            results: movieResults\n          }\n        } = await moviesApi.search(searchTerm);\n        const {\n          data: {\n            results: tvResults\n          }\n        } = await tvApi.search(searchTerm);\n        this.setState({\n          movieResults,\n          tvResults\n        });\n      } catch {\n        this.setState({\n          error: \"Can't find results!\"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      loading,\n      error\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(SearchPresenter, {\n      movieResults: movieResults,\n      tvResults: tvResults,\n      searchTerm: searchTerm,\n      loading: loading,\n      error: error,\n      handleSubmit: this.handleSubmit,\n      updateTerm: this.updateTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/taehyungkim/Documents/Code/khanflix/src/Routes/Search/SearchContainer.js"],"names":["moviesApi","tvApi","React","SearchPresenter","Component","state","movieResults","tvResults","searchTerm","loading","error","updateTerm","event","target","value","setState","handleSubmit","preventDefault","searchByTerm","Error","data","results","search","render","console","log"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,KAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,cAAcD,KAAK,CAACE,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,OAAO,EAAE,KAJH;AAKNC,MAAAA,KAAK,EAAE;AALD,KADmC;;AAAA,SAS3CC,UAT2C,GAS7BC,KAAD,IAAW;AACtB,YAAM;AACJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AADJ,UAEFF,KAFJ;AAGA,WAAKG,QAAL,CAAc;AACZP,QAAAA,UAAU,EAAEM;AADA,OAAd;AAGD,KAhB0C;;AAAA,SAkB3CE,YAlB2C,GAkB3BJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;AACA,YAAM;AAAET,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAIG,UAAU,KAAK,EAAnB,EAAuB;AACrB,aAAKU,YAAL,CAAkBV,UAAlB;AACD;AACF,KAxB0C;;AAAA,SA0B3CU,YA1B2C,GA0B5B,YAAY;AACzB,YAAM;AAAEV,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;AACA,WAAKU,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI;AACF,cAAMU,KAAK,EAAX;AACA,cAAM;AACJC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,OAAO,EAAEf;AAAX;AADF,YAEF,MAAMN,SAAS,CAACsB,MAAV,CAAiBd,UAAjB,CAFV;AAGA,cAAM;AACJY,UAAAA,IAAI,EAAE;AAAEC,YAAAA,OAAO,EAAEd;AAAX;AADF,YAEF,MAAMN,KAAK,CAACqB,MAAN,CAAad,UAAb,CAFV;AAGA,aAAKO,QAAL,CAAc;AACZT,UAAAA,YADY;AAEZC,UAAAA;AAFY,SAAd;AAID,OAZD,CAYE,MAAM;AACN,aAAKQ,QAAL,CAAc;AACZL,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAhBD,SAgBU;AACR,aAAKK,QAAL,CAAc;AACZN,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF,KAlD0C;AAAA;;AAoD3Cc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,YAAF;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA,UAA3B;AAAuCC,MAAAA,OAAvC;AAAgDC,MAAAA;AAAhD,QAA0D,KAAKL,KAArE;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;AACA,wBACE,QAAC,eAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,KAAK,EAAEC,KALT;AAME,MAAA,YAAY,EAAE,KAAKM,YANrB;AAOE,MAAA,UAAU,EAAE,KAAKL;AAPnB;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAlE0C","sourcesContent":["import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      throw Error();\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results!\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}