{"ast":null,"code":"var _jsxFileName = \"/Users/taehyungkim/Documents/Code/khanflix/src/Routes/TV/TVPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n`;\n_c = Container;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  error,\n  loading\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Helmet, {\n    children: /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"TV | KhanFlix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {\n    children: [topRated && topRated.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Top Rated TV Shows\",\n      children: topRated.map(tv => /*#__PURE__*/_jsxDEV(Poster, {\n        id: tv.id,\n        imageUrl: tv.poster_path,\n        title: tv.original_name,\n        rating: tv.vote_average,\n        year: tv.first_air_date && tv.first_air_date.substring(0, 4)\n      }, tv.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), popular && popular.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Popular TV Shows\",\n      children: popular.map(tv => /*#__PURE__*/_jsxDEV(Poster, {\n        id: tv.id,\n        imageUrl: tv.poster_path,\n        title: tv.original_name,\n        rating: tv.vote_average,\n        year: tv.first_air_date && tv.first_air_date.substring(0, 4)\n      }, tv.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), airingToday && airingToday.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Airing Today\",\n      children: airingToday.map(tv => /*#__PURE__*/_jsxDEV(Poster, {\n        id: tv.id,\n        imageUrl: tv.poster_path,\n        title: tv.original_name,\n        rating: tv.vote_average,\n        year: tv.first_air_date && tv.first_air_date.substring(0, 4)\n      }, tv.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      text: error,\n      color: \"#e74c3c\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this)]\n}, void 0, true);\n\n_c2 = TVPresenter;\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.bool.isRequired,\n  loading: PropTypes.string\n};\nexport default TVPresenter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TVPresenter\");","map":{"version":3,"sources":["/Users/taehyungkim/Documents/Code/khanflix/src/Routes/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Poster","Helmet","Container","div","TVPresenter","topRated","popular","airingToday","error","loading","length","map","tv","id","poster_path","original_name","vote_average","first_air_date","substring","propTypes","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV | KhanFlix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated TV Shows\">\n            {topRated.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular TV Shows\">\n            {popular.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.bool.isRequired,\n  loading: PropTypes.string,\n};\n\nexport default TVPresenter;\n"]},"metadata":{},"sourceType":"module"}